{"ast":null,"code":"var _jsxFileName = \"/home/kemo/Desktop/react-challenge1/src/App.js\";\nimport React, { Component } from 'react';\nimport './App.css';\nimport Input from \"./UserInput/UserInput\";\nimport UserOUput from './UserOutput/UserOutput';\nimport InputType from \"./inputType/inputType\";\n\nclass App extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      users: [{\n        name: \"kareem\",\n        age: \"22\",\n        caption: \"i'm a web devoloper can i help you!\",\n        id: \"1\"\n      }, {\n        name: \"khald\",\n        age: \"34\",\n        caption: \"i'm a doctor can i give you a medical consaltant\",\n        id: \"2\"\n      }, {\n        name: \"mo sala\",\n        age: \"34\",\n        caption: \"i'm a soccer player. hello word\",\n        id: \"3\"\n      }],\n      currentUser: 1,\n      outputParagraph: null\n    };\n\n    this.getIndex = event => {\n      // get the user index by id \n      const userIndex = this.state.users.findIndex(u => u.id === event.target.value); // return the user index\n\n      this.setState({\n        currentUser: userIndex\n      });\n    };\n\n    this.changeName = event => {\n      // get a copy of original users\n      const users = this.state.users.slice(); //get a targeted user by index\n\n      users[this.state.currentUser].name = event.target.value; //update the state\n\n      this.setState({\n        users: users\n      });\n    };\n\n    this.inptTyping = event => {};\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"App\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"challenge\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"h1\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 11\n      }\n    }, \"challenge one\"), /*#__PURE__*/React.createElement(Input, {\n      idclick: this.getIndex,\n      nameclick: event => this.changeName(event),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 9\n      }\n    }), this.state.users.map(user => {\n      return /*#__PURE__*/React.createElement(UserOUput, {\n        name: user.name,\n        caption: user.caption,\n        id: user.id,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 15\n        }\n      });\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"challenge\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"h1\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 11\n      }\n    }, \"challenge two\"), /*#__PURE__*/React.createElement(InputType, {\n      changed: this.inptTyping,\n      content: this.state.outputParagraph,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 11\n      }\n    })));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/home/kemo/Desktop/react-challenge1/src/App.js"],"names":["React","Component","Input","UserOUput","InputType","App","state","users","name","age","caption","id","currentUser","outputParagraph","getIndex","event","userIndex","findIndex","u","target","value","setState","changeName","slice","inptTyping","render","map","user"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport './App.css';\nimport Input from \"./UserInput/UserInput\";\nimport UserOUput from './UserOutput/UserOutput';\nimport InputType from \"./inputType/inputType\";\n\nclass App extends Component {\n  state = {\n    users : [\n      {name: \"kareem\", age: \"22\", caption: \"i'm a web devoloper can i help you!\", id:\"1\"},\n      {name: \"khald\", age: \"34\", caption: \"i'm a doctor can i give you a medical consaltant\", id:\"2\"},\n      {name: \"mo sala\", age: \"34\", caption: \"i'm a soccer player. hello word\", id:\"3\"},\n        ],\n    currentUser: 1,\n    outputParagraph: null\n\n  }; \n\n  getIndex = event => {\n    // get the user index by id \n    const userIndex = this.state.users.findIndex(u => u.id === event.target.value);\n    // return the user index\n    this.setState({currentUser: userIndex})\n  } \n  \n  changeName = (event) => {\n    // get a copy of original users\n    const users = this.state.users.slice();\n    //get a targeted user by index\n    users[this.state.currentUser].name = event.target.value;\n    //update the state\n    this.setState({users: users})\n  }\n\n  inptTyping = (event) => {\n    \n  }\n\n\n  render(){\n    \n    return (\n      <div className=\"App\">\n        <div className=\"challenge\">\n          <h1>challenge one</h1>\n        <Input  idclick= {this.getIndex} nameclick={(event) => this.changeName(event)}/>\n        {\n          this.state.users.map((user) => {\n            return (\n              <UserOUput name={user.name} caption={user.caption} id={user.id}/>\n            )\n          })\n        }\n        </div>\n        <div className=\"challenge\">\n          <h1>challenge two</h1>\n          <InputType changed={this.inptTyping} content={this.state.outputParagraph}/>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}