{"ast":null,"code":"var _jsxFileName = \"/home/kemo/Desktop/react-challenge1/src/Char/Char.js\";\nimport React, { Component, useState } from 'react';\nimport './Char.css';\n\nconst Char = props => {\n  const [state, setstate] = useState({});\n  let stringList;\n\n  if (props.string) {\n    stringList = /*#__PURE__*/React.createElement(\"ol\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 14,\n        columnNumber: 13\n      }\n    }, props.string.split(\"\").map((c, i) => /*#__PURE__*/React.createElement(\"li\", {\n      style: {\n        cursor: \"pointer\"\n      },\n      onClick: props.deleteChar,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 15,\n        columnNumber: 55\n      }\n    }, c)));\n  }\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 7\n    }\n  }, stringList);\n};\n\nexport default Char;","map":{"version":3,"sources":["/home/kemo/Desktop/react-challenge1/src/Char/Char.js"],"names":["React","Component","useState","Char","props","state","setstate","stringList","string","split","map","c","i","cursor","deleteChar"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,OAAO,YAAP;;AAGA,MAAMC,IAAI,GAAGC,KAAK,IAAK;AAEnB,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBJ,QAAQ,CAAC,EAAD,CAAlC;AAIA,MAAIK,UAAJ;;AACA,MAAIH,KAAK,CAACI,MAAV,EAAiB;AACbD,IAAAA,UAAU,gBACN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACKH,KAAK,CAACI,MAAN,CAAaC,KAAb,CAAmB,EAAnB,EAAuBC,GAAvB,CAA2B,CAACC,CAAD,EAAIC,CAAJ,kBAAU;AAAI,MAAA,KAAK,EAAE;AAACC,QAAAA,MAAM,EAAE;AAAT,OAAX;AAAgC,MAAA,OAAO,EAAET,KAAK,CAACU,UAA/C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAA4DH,CAA5D,CAArC,CADL,CADJ;AAKH;;AAGD,sBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGJ,UADH,CADF;AAMH,CAtBD;;AAwBA,eAAeJ,IAAf","sourcesContent":["import React, { Component, useState } from 'react';\nimport './Char.css';\n\n\nconst Char = props =>  {\n\n    const [state, setstate] = useState({\n        \n    })\n\n    let stringList;\n    if (props.string){\n        stringList = (\n            <ol>\n                {props.string.split(\"\").map((c, i) => <li style={{cursor: \"pointer\"}} onClick={props.deleteChar}>{c}</li>)}\n            </ol>\n        );\n    }   \n        \n\n    return (\n      <div >\n        {stringList}\n      </div>\n    );\n\n}\n\nexport default Char;\n"]},"metadata":{},"sourceType":"module"}